user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log debug;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;  # Ajusta este valor según tus necesidades
}

http {
    upstream app {
        # Aquí agregas los servidores backend (pueden ser múltiples)
        server 127.0.0.1:8000;  # Ejemplo de servidor local
        # Si tienes varios servidores backend, agrégales más líneas
        server 0.0.0.0:8000;
        server gestor-empleados-app;
        # server 127.0.0.1:8002;
        # Puedes usar un nombre de contenedor de Docker si corres Nginx dentro de Docker también
    }

    server {
        listen 80;
        server_name gestorempleados.duckdns.org;

        # Redirige automáticamente de HTTP a HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name gestorempleados.duckdns.org;

        ssl_certificate /etc/nginx/certs/cert.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;

        # Balanceo de carga hacia el backend
        location / {
            proxy_pass http://app;  # Aquí usamos el upstream 'app' que definimos antes
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Configuración para manejar archivos PHP (si usas PHP-FPM)
        location ~ \.php$ {
            include fastcgi_params;
            fastcgi_pass gestor-empleados-app:8000;  # Cambiar esto si usas PHP-FPM
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }
    }
}
